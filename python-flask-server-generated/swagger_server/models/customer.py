# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Customer(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, customer_id: int=None, country_code: str=None, last_order_ts: datetime=None, first_order_ts: datetime=None, total_orders: int=None, segment_name: str=None):  # noqa: E501
        """Customer - a model defined in Swagger

        :param customer_id: The customer_id of this Customer.  # noqa: E501
        :type customer_id: int
        :param country_code: The country_code of this Customer.  # noqa: E501
        :type country_code: str
        :param last_order_ts: The last_order_ts of this Customer.  # noqa: E501
        :type last_order_ts: datetime
        :param first_order_ts: The first_order_ts of this Customer.  # noqa: E501
        :type first_order_ts: datetime
        :param total_orders: The total_orders of this Customer.  # noqa: E501
        :type total_orders: int
        :param segment_name: The segment_name of this Customer.  # noqa: E501
        :type segment_name: str
        """
        self.swagger_types = {
            'customer_id': int,
            'country_code': str,
            'last_order_ts': datetime,
            'first_order_ts': datetime,
            'total_orders': int,
            'segment_name': str
        }

        self.attribute_map = {
            'customer_id': 'customer_id',
            'country_code': 'country_code',
            'last_order_ts': 'last_order_ts',
            'first_order_ts': 'first_order_ts',
            'total_orders': 'total_orders',
            'segment_name': 'segment_name'
        }
        self._customer_id = customer_id
        self._country_code = country_code
        self._last_order_ts = last_order_ts
        self._first_order_ts = first_order_ts
        self._total_orders = total_orders
        self._segment_name = segment_name

    @classmethod
    def from_dict(cls, dikt) -> 'Customer':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Customer of this Customer.  # noqa: E501
        :rtype: Customer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_id(self) -> int:
        """Gets the customer_id of this Customer.


        :return: The customer_id of this Customer.
        :rtype: int
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id: int):
        """Sets the customer_id of this Customer.


        :param customer_id: The customer_id of this Customer.
        :type customer_id: int
        """

        self._customer_id = customer_id

    @property
    def country_code(self) -> str:
        """Gets the country_code of this Customer.


        :return: The country_code of this Customer.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code: str):
        """Sets the country_code of this Customer.


        :param country_code: The country_code of this Customer.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def last_order_ts(self) -> datetime:
        """Gets the last_order_ts of this Customer.


        :return: The last_order_ts of this Customer.
        :rtype: datetime
        """
        return self._last_order_ts

    @last_order_ts.setter
    def last_order_ts(self, last_order_ts: datetime):
        """Sets the last_order_ts of this Customer.


        :param last_order_ts: The last_order_ts of this Customer.
        :type last_order_ts: datetime
        """

        self._last_order_ts = last_order_ts

    @property
    def first_order_ts(self) -> datetime:
        """Gets the first_order_ts of this Customer.


        :return: The first_order_ts of this Customer.
        :rtype: datetime
        """
        return self._first_order_ts

    @first_order_ts.setter
    def first_order_ts(self, first_order_ts: datetime):
        """Sets the first_order_ts of this Customer.


        :param first_order_ts: The first_order_ts of this Customer.
        :type first_order_ts: datetime
        """

        self._first_order_ts = first_order_ts

    @property
    def total_orders(self) -> int:
        """Gets the total_orders of this Customer.


        :return: The total_orders of this Customer.
        :rtype: int
        """
        return self._total_orders

    @total_orders.setter
    def total_orders(self, total_orders: int):
        """Sets the total_orders of this Customer.


        :param total_orders: The total_orders of this Customer.
        :type total_orders: int
        """

        self._total_orders = total_orders

    @property
    def segment_name(self) -> str:
        """Gets the segment_name of this Customer.


        :return: The segment_name of this Customer.
        :rtype: str
        """
        return self._segment_name

    @segment_name.setter
    def segment_name(self, segment_name: str):
        """Sets the segment_name of this Customer.


        :param segment_name: The segment_name of this Customer.
        :type segment_name: str
        """

        self._segment_name = segment_name
